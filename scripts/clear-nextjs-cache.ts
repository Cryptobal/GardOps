import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üßπ [CACHE CLEAR] Iniciando limpieza de cach√© de Next.js...');

try {
  // Detener el servidor de desarrollo si est√° corriendo
  console.log('üõë [CACHE CLEAR] Deteniendo servidor de desarrollo...');
  try {
    execSync('pkill -f "next dev"', { stdio: 'ignore' });
    console.log('‚úÖ [CACHE CLEAR] Servidor detenido');
  } catch (error) {
    console.log('‚ÑπÔ∏è [CACHE CLEAR] No hab√≠a servidor corriendo');
  }

  // Limpiar directorios de cach√©
  const cacheDirs = [
    '.next',
    'node_modules/.cache',
    '.turbo'
  ];

  cacheDirs.forEach(dir => {
    if (fs.existsSync(dir)) {
      console.log(`üóëÔ∏è [CACHE CLEAR] Eliminando ${dir}...`);
      fs.rmSync(dir, { recursive: true, force: true });
      console.log(`‚úÖ [CACHE CLEAR] ${dir} eliminado`);
    } else {
      console.log(`‚ÑπÔ∏è [CACHE CLEAR] ${dir} no existe`);
    }
  });

  // Limpiar cach√© de npm
  console.log('üßπ [CACHE CLEAR] Limpiando cach√© de npm...');
  execSync('npm cache clean --force', { stdio: 'inherit' });

  console.log('‚úÖ [CACHE CLEAR] Limpieza completada');
  console.log('üöÄ [CACHE CLEAR] Reiniciando servidor...');
  
  // Reiniciar el servidor
  execSync('npm run dev', { stdio: 'inherit' });

} catch (error) {
  console.error('‚ùå [CACHE CLEAR] Error durante la limpieza:', error);
}
