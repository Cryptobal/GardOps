#!/usr/bin/env ts-node

import { config } from 'dotenv';
import path from 'path';
import { query } from '../src/lib/database';

// Cargar variables de entorno
config({ path: path.join(__dirname, '../.env.local') });

async function migrateGuardiasLocation() {
  console.log('üîß Migrando campos de ubicaci√≥n geogr√°fica para guardias...');
  
  try {
    // 1. Verificar si la tabla guardias existe
    const tableExists = await query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_name = 'guardias'
      );
    `);
    
    if (!tableExists.rows[0].exists) {
      console.log('‚ùå La tabla guardias no existe. Ejecuta primero la migraci√≥n de guardias.');
      return;
    }

    // 2. A√±adir columnas de ubicaci√≥n geogr√°fica
    console.log('üìù Agregando columnas de ubicaci√≥n geogr√°fica...');
    await query(`
      ALTER TABLE guardias 
      ADD COLUMN IF NOT EXISTS latitud DECIMAL(10, 8) NULL,
      ADD COLUMN IF NOT EXISTS longitud DECIMAL(11, 8) NULL,
      ADD COLUMN IF NOT EXISTS ciudad VARCHAR(100) NULL,
      ADD COLUMN IF NOT EXISTS comuna VARCHAR(100) NULL,
      ADD COLUMN IF NOT EXISTS region VARCHAR(100) NULL;
    `);

    // 3. Crear √≠ndices para b√∫squedas geogr√°ficas
    console.log('üîç Creando √≠ndices para b√∫squedas geogr√°ficas...');
    await query(`
      CREATE INDEX IF NOT EXISTS idx_guardias_location ON guardias(latitud, longitud);
      CREATE INDEX IF NOT EXISTS idx_guardias_ciudad ON guardias(ciudad);
      CREATE INDEX IF NOT EXISTS idx_guardias_comuna ON guardias(comuna);
    `);

    // 4. Verificar la migraci√≥n
    console.log('‚úÖ Verificando migraci√≥n...');
    const columnsResult = await query(`
      SELECT 
        column_name, 
        data_type, 
        is_nullable
      FROM information_schema.columns 
      WHERE table_name = 'guardias' 
      AND column_name IN ('latitud', 'longitud', 'ciudad', 'comuna', 'region')
      ORDER BY column_name;
    `);

    console.log('üìã Columnas agregadas:');
    columnsResult.rows.forEach((row: any) => {
      console.log(`   ‚Ä¢ ${row.column_name} (${row.data_type}, ${row.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'})`);
    });

    console.log('üéâ Migraci√≥n de ubicaci√≥n geogr√°fica completada exitosamente!');
    
  } catch (error) {
    console.error('‚ùå Error durante la migraci√≥n:', error);
    throw error;
  }
}

async function main() {
  try {
    await migrateGuardiasLocation();
    process.exit(0);
  } catch (error) {
    console.error('üí• Error cr√≠tico:', error);
    process.exit(1);
  }
}

main(); 