const { Pool } = require('pg');
const { config } = require('dotenv');
const path = require('path');

// Cargar variables de entorno
config({ path: path.join(__dirname, '../.env.local') });

async function testConnection() {
  console.log('üîç VERIFICANDO CONEXI√ìN A NEON...\n');
  
  const databaseUrl = process.env.DATABASE_URL;
  
  if (!databaseUrl || databaseUrl.includes('username') || databaseUrl.includes('hostname')) {
    console.log('‚ùå ERROR: La DATABASE_URL no est√° configurada correctamente');
    console.log('üìù Para configurarla:');
    console.log('   1. Ve a https://console.neon.tech/');
    console.log('   2. Selecciona tu proyecto');
    console.log('   3. Ve a "Connection Details"');
    console.log('   4. Copia la URL y reempl√°zala en .env.local');
    console.log('\nüîß Tu URL deber√≠a verse as√≠:');
    console.log('   postgresql://usuario:contrase√±a@ep-ejemplo-123.us-east-1.aws.neon.tech/basedatos?sslmode=require');
    return false;
  }

  const pool = new Pool({
    connectionString: databaseUrl,
    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
  });

  try {
    console.log('‚è≥ Probando conexi√≥n...');
    const result = await pool.query('SELECT NOW() as fecha_actual');
    console.log('‚úÖ ¬°CONEXI√ìN EXITOSA!');
    console.log(`üìÖ Fecha del servidor: ${result.rows[0].fecha_actual}`);
    console.log('\nüöÄ Ahora puedes ejecutar la auditor√≠a completa con:');
    console.log('   node scripts/audit-database.js');
    return true;
  } catch (error) {
    console.log('‚ùå ERROR DE CONEXI√ìN:');
    console.log(`   ${error.message}`);
    console.log('\nüîß Verifica:');
    console.log('   ‚Ä¢ Que la URL est√© correcta');
    console.log('   ‚Ä¢ Que tu base de datos en Neon est√© activa');
    console.log('   ‚Ä¢ Que no tengas l√≠mites de conexi√≥n');
    return false;
  } finally {
    await pool.end();
  }
}

testConnection(); 