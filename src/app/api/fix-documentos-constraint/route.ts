import { NextRequest, NextResponse } from "next/server";
import pool from "@/lib/database";

export async function GET(req: NextRequest) {
  try {
    console.log("üîß Corrigiendo restricci√≥n de verificaci√≥n de la tabla documentos...");

    // Corregir la restricci√≥n de verificaci√≥n de la columna tipo
    try {
      // Primero eliminar la restricci√≥n existente
      await pool.query(`
        ALTER TABLE documentos 
        DROP CONSTRAINT IF EXISTS documentos_tipo_check
      `);
      console.log("‚úÖ Restricci√≥n de verificaci√≥n anterior eliminada");

      // Crear nueva restricci√≥n que incluya tipos de postulaci√≥n
      await pool.query(`
        ALTER TABLE documentos 
        ADD CONSTRAINT documentos_tipo_check 
        CHECK (tipo = ANY (ARRAY[
          'contrato', 'finiquito', 'f30', 'f30-1', 'directiva', 'otros',
          'Certificado OS10', 'Carnet Identidad Frontal', 'Carnet Identidad Reverso',
          'Certificado Antecedentes', 'Certificado Ense√±anza Media',
          'Certificado AFP', 'Certificado AFC', 'Certificado FONASA/ISAPRE'
        ]))
      `);
      console.log("‚úÖ Nueva restricci√≥n de verificaci√≥n creada con tipos de postulaci√≥n");
    } catch (error: any) {
      console.log("‚ö†Ô∏è Error corrigiendo restricci√≥n de verificaci√≥n:", error.message);
      throw error;
    }

    // Crear restricci√≥n √∫nica para (guardia_id, tipo_documento_id) si no existe
    try {
      await pool.query(`
        ALTER TABLE documentos 
        ADD CONSTRAINT unique_guardia_tipo_documento 
        UNIQUE (guardia_id, tipo_documento_id)
      `);
      console.log("‚úÖ Restricci√≥n √∫nica (guardia_id, tipo_documento_id) creada");
    } catch (error: any) {
      if (error.message.includes('already exists')) {
        console.log("‚ÑπÔ∏è Restricci√≥n √∫nica ya existe");
      } else {
        console.log("‚ö†Ô∏è Error creando restricci√≥n √∫nica:", error.message);
      }
    }

    return NextResponse.json({
      success: true,
      message: "Restricci√≥n de verificaci√≥n corregida exitosamente"
    });

  } catch (error: any) {
    console.error("‚ùå Error corrigiendo restricci√≥n:", error);
    return NextResponse.json({
      success: false,
      error: "Error corrigiendo restricci√≥n",
      detalles: error.message
    }, { status: 500 });
  }
}
