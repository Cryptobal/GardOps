export type Action =
  | 'read:list' | 'read:detail' | 'create' | 'update' | 'delete' | 'export'
  | 'manage:roles' | 'admin:*';

export type Resource =
  | 'clientes' | 'instalaciones' | 'guardias' | 'puestos'
  | 'pauta_mensual' | 'pauta_diaria' | 'payroll' | 'configuracion';

export function can(resource: Resource, action: Action, eff: Record<string, string[]>) {
  const actions = eff[resource] || [];
  return actions.includes(action) || actions.includes('admin:*');
}

import React from 'react';
export function Authorize(
  { resource, action, eff, children }:
  { resource: Resource, action: Action, eff: Record<string, string[]>, children: React.ReactNode }
) {
  if (!can(resource, action, eff)) return null;
  return <>{children}</>;
}

export function GuardButton(
  { resource, action, eff, onClick, ...props }:
  { resource: Resource, action: Action, eff: Record<string, string[]>, onClick?: () => void } & React.ButtonHTMLAttributes<HTMLButtonElement>
) {
  const allowed = can(resource, action, eff);
  return (
    <button
      {...props}
      onClick={allowed ? onClick : undefined}
      aria-disabled={!allowed}
      disabled={!allowed}
      data-guard={`${resource}:${action}`}
    />
  );
}


