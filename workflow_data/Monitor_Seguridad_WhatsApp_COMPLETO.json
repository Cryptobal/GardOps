{
  "proyecto": "Monitor de Seguridad WhatsApp - GardOps",
  "workflow_id": "1bDGASagTwhJO1oE",
  "workflow_name": "Agente Whatsapp",
  "estado": "ACTIVO ‚úÖ",
  "fecha_creacion": "2025-09-30",
  "ultima_actualizacion": "2025-10-02",
  "version": "2.0 - Versi√≥n Mejorada con Investigaci√≥n Activa",
  
  "objetivo_principal": "Sistema inteligente de monitoreo de seguridad en WhatsApp con 5 flujos automatizados que detectan incidentes, investigan activamente, generan reportes y monitorean proactivamente todos los grupos de seguridad",
  
  "arquitectura": {
    "total_nodos": 30,
    "triggers": 2,
    "ai_agents": 4,
    "ai_models": 3,
    "functions": 13,
    "http_requests": 7,
    "redis_nodes": 6,
    "switches": 3
  },
  
  "flujos_implementados": [
    {
      "numero": 1,
      "nombre": "Chatbot Conversacional Inteligente",
      "proposito": "Responder autom√°ticamente a mensajes con contexto y memoria",
      "trigger": "Webhook (cada mensaje entrante)",
      "nodos": [
        "Webhook Wasender",
        "Extraer Datos Wasender",
        "AI Agent WhatsApp",
        "OpenAI GPT-4o-mini",
        "Redis Chat Memory",
        "Filtrar Respuestas Vac√≠as",
        "Switch",
        "Respuesta",
        "Respuesta a grupo"
      ],
      "caracteristicas": [
        "Memoria conversacional de 15 d√≠as por chat/grupo",
        "Modo investigador para incidentes (hace preguntas espec√≠ficas)",
        "Filtro inteligente de respuestas vac√≠as",
        "Diferenciaci√≥n entre grupos #Reporte y chats normales",
        "No responde a mensajes normales, solo a incidentes o keywords de RRHH"
      ],
      "prompt_key_features": [
        "Detecta palabras clave: incendio, robo, alarma, intruso, emergencia",
        "Activa modo investigador con preguntas espec√≠ficas seg√∫n tipo",
        "Hace seguimiento paso a paso hasta obtener informaci√≥n completa",
        "En grupos #Reporte: solo responde si hay conversaci√≥n activa o incidente",
        "En chats individuales: solo responde a keywords de RRHH o incidentes"
      ]
    },
    {
      "numero": 2,
      "nombre": "Monitor de Seguridad en Tiempo Real",
      "proposito": "Detectar incidentes de seguridad y alertar inmediatamente",
      "trigger": "Webhook (cada mensaje entrante)",
      "nodos": [
        "Filtrar para Security Monitor",
        "AI Detector Incidentes",
        "OpenAI Security",
        "Parsear An√°lisis",
        "Verificar Investigaci√≥n Activa",
        "Filtrar Incidentes con Estado",
        "Filtrar Solo Incidentes",
        "Alertar Operaciones",
        "Guardar Incidente",
        "Marcar Investigaci√≥n Activa",
        "Actualizar Timestamp Actividad"
      ],
      "caracteristicas": [
        "An√°lisis de TODOS los mensajes (grupos e individuales)",
        "Excluye grupo Operaciones General para evitar loops",
        "Detecci√≥n por IA con criterios espec√≠ficos",
        "Sistema de estado de investigaci√≥n (evita alertas duplicadas)",
        "Guarda incidentes en Redis con TTL 24h",
        "Registra timestamp de actividad de cada canal"
      ],
      "criterios_deteccion": {
        "emergencias": ["incendios", "explosiones", "derrames qu√≠micos"],
        "seguridad": ["robos", "asaltos", "intrusos", "violencia", "ruidos extra√±os"],
        "operacionales": ["fallas el√©ctricas graves", "colapsos estructurales"],
        "alertas": ["alarmas activadas", "accesos no autorizados", "sensores"],
        "medicas": ["accidentes graves", "heridos", "emergencias m√©dicas"]
      },
      "alerta_formato": {
        "destino": "120363424106281199@g.us (Grupo Operaciones)",
        "template": "‚ö†Ô∏è *ALERTA INICIAL - INCIDENTE DETECTADO*\n\nüë§ *Reportado por:* {nombre}\nüö® *Tipo:* {severidad}\nüìç *Canal:* {canal}\n\n*Mensaje:* \"{mensaje}\"\n\nüîç _Iniciando investigaci√≥n..._\nüìä _En breve se enviar√° un resumen detallado_"
      }
    },
    {
      "numero": 3,
      "nombre": "Sistema de Investigaci√≥n con Resumen Final",
      "proposito": "Cuando el chatbot completa una investigaci√≥n, genera y env√≠a un reporte final detallado",
      "trigger": "Detecci√≥n de frase clave del chatbot",
      "nodos": [
        "Detectar Resumen Final",
        "Switch Resumen Final",
        "Obtener Incidente de Redis",
        "Procesar Incidente para Reporte",
        "Obtener Conversaci√≥n Completa",
        "AI Generar Resumen Final",
        "OpenAI Resumen Final",
        "Enviar Reporte Final"
      ],
      "caracteristicas": [
        "Detecta cuando chatbot dice 'Estoy alertando a operaciones'",
        "Obtiene toda la conversaci√≥n de investigaci√≥n",
        "Genera reporte final profesional con GPT-4o",
        "Incluye: informaci√≥n general, descripci√≥n, investigaci√≥n, estado, recomendaciones",
        "Env√≠a al grupo Operaciones General"
      ],
      "frase_clave_detector": "Estoy alertando a operaciones",
      "reporte_final_estructura": {
        "seccion_1": "Informaci√≥n General (reportador, canal, severidad, horarios)",
        "seccion_2": "Descripci√≥n del Incidente",
        "seccion_3": "Investigaci√≥n Realizada (preguntas y respuestas)",
        "seccion_4": "Informaci√≥n Recopilada (ubicaciones, magnitudes, personas)",
        "seccion_5": "Estado Actual",
        "seccion_6": "Recomendaciones",
        "seccion_7": "Pr√≥ximos Pasos"
      }
    },
    {
      "numero": 4,
      "nombre": "Resumen Diario Automatizado",
      "proposito": "Generar y enviar reporte diario de seguridad a las 07:00 AM",
      "trigger": "Cron (07:00 diario)",
      "nodos": [
        "Cron Resumen Diario 07:00",
        "Obtener Incidentes 24h",
        "Obtener Datos Actividad",
        "Obtener Valores Redis",
        "Procesar Resumen Mejorado",
        "AI Generar Resumen",
        "OpenAI GPT-4o Resumen",
        "Enviar Resumen WhatsApp",
        "Enviar Resumen Email"
      ],
      "caracteristicas": [
        "Se ejecuta todos los d√≠as a las 07:00 AM",
        "Obtiene incidentes de √∫ltimas 24h desde Redis",
        "Obtiene datos de actividad de todos los grupos",
        "Detecta grupos sin actividad (>8h) y baja actividad (>4h)",
        "Genera reporte con GPT-4o",
        "Env√≠a por WhatsApp y Email simult√°neamente"
      ],
      "destinos": [
        {
          "tipo": "WhatsApp",
          "destinatario": "120363424106281199@g.us",
          "nombre": "Grupo Operaciones General"
        },
        {
          "tipo": "Email",
          "destinatario": "operaciones@gard.cl",
          "formato": "Texto con emojis compatibles"
        }
      ],
      "metricas_incluidas": [
        "Total de incidentes",
        "Grupos afectados",
        "Incidentes urgentes",
        "Incidentes importantes",
        "Grupos sin actividad nocturna",
        "Grupos con baja actividad",
        "Patrones y tendencias"
      ]
    },
    {
      "numero": 5,
      "nombre": "Monitoreo Proactivo Horario",
      "proposito": "Contactar proactivamente grupos #Reporte cada hora para verificar estado",
      "trigger": "Cron (cada hora, 24/7)",
      "nodos": [
        "Cron Monitoreo Proactivo",
        "Obtener Grupos",
        "Filtrar Grupos #Reporte",
        "Verificar Actividad",
        "Redis Get Last Activity",
        "Determinar Tipo Mensaje",
        "Enviar Mensaje Proactivo",
        "Marcar Conversaci√≥n Activa"
      ],
      "caracteristicas": [
        "Se ejecuta cada hora (0:00, 1:00, 2:00... 23:00)",
        "Obtiene todos los grupos desde Wasender API",
        "Filtra solo grupos que contienen '#Reporte' en el nombre",
        "Verifica √∫ltima actividad de cada grupo",
        "Si sin actividad >1h, env√≠a mensaje proactivo",
        "Mensajes diferentes para d√≠a (06:00-22:00) vs noche (22:00-06:00)",
        "Marca conversaci√≥n como activa en Redis"
      ],
      "mensajes_proactivos": {
        "dia": "Hola equipo, ¬øc√≥mo va todo? ¬øAlguna novedad que reportar?",
        "noche": "Control nocturno: ¬øRondas completadas? ¬øTodo en orden?"
      }
    }
  ],
  
  "configuracion_tecnica": {
    "webhook": {
      "url": "https://primary-production-8f25.up.railway.app/webhook/guardops-whatsapp-v2",
      "metodo": "POST",
      "path": "guardops-whatsapp-v2",
      "autenticacion": "x-webhook-signature header"
    },
    
    "credenciales": {
      "openai": {
        "id": "VpICqtUssU3DtZVV",
        "nombre": "OpenAi account",
        "uso": "GPT-4o-mini (chatbot, detector) y GPT-4o (res√∫menes)"
      },
      "redis": {
        "id": "P17fD8gmfb6Ennlv",
        "nombre": "Redis account",
        "uso": "Memoria conversacional, storage de incidentes, timestamps de actividad"
      },
      "wasender": {
        "id": "ea83k18jDZTDBBjq",
        "nombre": "Bearer Auth account",
        "uso": "Env√≠o de mensajes WhatsApp"
      },
      "gmail": {
        "id": "Oz56AwnpseCjPFOr",
        "nombre": "Gmail account",
        "uso": "Env√≠o de res√∫menes por email"
      }
    },
    
    "grupos_configurados": {
      "operaciones_general": {
        "id": "120363424106281199@g.us",
        "nombre": "# Operaciones General",
        "uso": "Destino de todas las alertas y res√∫menes"
      },
      "grupo_ejemplo": {
        "id": "120363421107247762@g.us",
        "nombre": "Grupo de prueba",
        "uso": "Testing (seg√∫n pinData)"
      }
    },
    
    "redis_keys": {
      "memoria_chat": {
        "pattern": "n8n:memory:{remoteJid}:*",
        "ttl": "15 d√≠as",
        "contenido": "Historial conversacional"
      },
      "incidentes": {
        "pattern": "guardops:incidente:{message_id}",
        "ttl": "24 horas",
        "contenido": "Datos completos del incidente + an√°lisis IA"
      },
      "ultima_actividad": {
        "pattern": "guardops:last_activity:{remoteJid}",
        "ttl": "Sin TTL (permanente)",
        "contenido": "{timestamp, message, sender}"
      },
      "investigacion_activa": {
        "pattern": "guardops:investigacion_activa:{remoteJid}",
        "ttl": "Sin especificar",
        "contenido": "true/false (evita alertas duplicadas)"
      },
      "conversacion_activa": {
        "pattern": "guardops:conversation_active:{groupId}",
        "ttl": "Sin especificar",
        "contenido": "{active, timestamp, message}"
      }
    }
  },
  
  "flujo_datos_detallado": {
    "entrada_webhook": {
      "ejemplo": {
        "event": "messages.upsert",
        "sessionId": "57bdf180fefa780f81704d7d756cee8b1ad13e30c34fa27e1d4a18b90135c1ae",
        "data": {
          "messages": {
            "key": {
              "remoteJid": "120363421107247762@g.us",
              "fromMe": false,
              "id": "3BBE1CC431003744C0BA",
              "participant": "255988825387206@lid"
            },
            "messageTimestamp": 1759337798,
            "pushName": "Carlos",
            "message": {
              "conversation": "incendio"
            }
          }
        }
      }
    },
    
    "datos_extraidos": {
      "telefono": "+56982307771",
      "mensaje": "incendio",
      "timestamp": "2025-10-02T00:39:56.000Z",
      "message_id": "3BBE1CC431003744C0BA",
      "nombre_remitente": "Carlos",
      "remote_jid": "120363421107247762@g.us",
      "event": "messages.upsert",
      "from_me": false
    },
    
    "filtros_aplicados": [
      {
        "orden": 1,
        "nodo": "Extraer Datos Wasender",
        "filtros": [
          "Solo procesar event: 'messages.upsert' (evitar duplicados)",
          "Ignorar mensajes fromMe: true (enviados por el bot)"
        ]
      },
      {
        "orden": 2,
        "nodo": "Filtrar para Security Monitor",
        "filtros": [
          "Excluir grupo Operaciones (120363424106281199@g.us)",
          "Procesar TODO lo dem√°s (grupos e individuales)"
        ]
      },
      {
        "orden": 3,
        "nodo": "Filtrar Respuestas Vac√≠as",
        "filtros": [
          "Bloquear respuestas vac√≠as o solo espacios",
          "Bloquear cadenas '\"\"'",
          "Solo enviar si hay contenido real"
        ]
      }
    ]
  },
  
  "sistema_investigacion": {
    "descripcion": "Sistema de 3 fases para investigaci√≥n profunda de incidentes",
    
    "fase_1_deteccion": {
      "trigger": "Mensaje con palabra clave de incidente",
      "accion": "AI Agent activa modo investigador",
      "preguntas_tipo": {
        "incendio": "¬øEn qu√© sector exacto? ¬øQu√© magnitud tiene?",
        "robo": "¬øD√≥nde ocurri√≥? ¬øCu√°ntas personas?",
        "intruso": "¬øUbicaci√≥n? ¬øCu√°ntos? ¬øArmados?",
        "alarma": "¬øQu√© tipo? ¬øSector?",
        "ruidos_extra√±os": "¬øD√≥nde? ¬øQu√© tipo de sonidos? ¬øDesde cu√°ndo?",
        "accidente": "¬øTipo de lesi√≥n? ¬øGravedad? ¬øConsciente?"
      }
    },
    
    "fase_2_investigacion": {
      "comportamiento": "Bot hace UNA pregunta a la vez, espera respuesta",
      "contexto": "Usa Redis Memory para recordar toda la conversaci√≥n",
      "duracion": "Hasta obtener informaci√≥n completa",
      "estado_redis": "guardops:investigacion_activa:{remoteJid} = true"
    },
    
    "fase_3_reporte_final": {
      "trigger": "Bot dice 'Estoy alertando a operaciones'",
      "proceso": [
        "1. Detectar frase clave",
        "2. Obtener incidente de Redis",
        "3. Generar reporte final con GPT-4o",
        "4. Enviar a grupo Operaciones",
        "5. Cerrar investigaci√≥n"
      ],
      "contenido_reporte": [
        "Informaci√≥n general (quien, donde, cuando)",
        "Descripci√≥n del incidente",
        "Investigaci√≥n realizada (Q&A)",
        "Informaci√≥n recopilada",
        "Estado actual",
        "Recomendaciones",
        "Pr√≥ximos pasos"
      ]
    }
  },
  
  "sistema_monitoreo_proactivo": {
    "descripcion": "Flujo que contacta proactivamente a grupos #Reporte para verificar estado",
    "frecuencia": "Cada hora (24 triggers diarios)",
    "horarios": ["00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00"],
    
    "proceso": [
      "1. Obtener todos los grupos desde Wasender API",
      "2. Filtrar solo grupos con '#Reporte' en el nombre",
      "3. Para cada grupo, verificar timestamp de √∫ltima actividad en Redis",
      "4. Si √∫ltima actividad >1h, determinar tipo de mensaje (d√≠a/noche)",
      "5. Enviar mensaje proactivo al grupo",
      "6. Marcar conversaci√≥n como activa en Redis"
    ],
    
    "logica_mensajes": {
      "horario_dia": {
        "rango": "06:00 - 21:59",
        "mensaje": "Hola equipo, ¬øc√≥mo va todo? ¬øAlguna novedad que reportar?"
      },
      "horario_noche": {
        "rango": "22:00 - 05:59",
        "mensaje": "Control nocturno: ¬øRondas completadas? ¬øTodo en orden?"
      }
    }
  },
  
  "resumen_diario": {
    "horario": "07:00 AM diario",
    "fuentes_datos": [
      "guardops:incidente:* (incidentes √∫ltimas 24h)",
      "guardops:last_activity:* (actividad de grupos)"
    ],
    
    "metricas_calculadas": {
      "incidentes": {
        "total": "Cantidad total de incidentes",
        "urgentes": "Filtro: severidad === 'URGENTE'",
        "importantes": "Filtro: severidad === 'IMPORTANTE'",
        "grupos_afectados": "Set √∫nico de remote_jid"
      },
      "actividad": {
        "sin_actividad": "Grupos sin mensajes >8 horas",
        "baja_actividad": "Grupos sin mensajes >4 horas"
      }
    },
    
    "estructura_reporte": {
      "seccion_1": "üìä RESUMEN DE SEGURIDAD DIARIO",
      "seccion_2": "RESUMEN EJECUTIVO (2-3 l√≠neas situaci√≥n general)",
      "seccion_3": "ESTAD√çSTICAS (incidentes, grupos, severidades)",
      "seccion_4": "INCIDENTES DESTACADOS (lista detallada)",
      "seccion_5": "MONITOREO DE ACTIVIDAD (grupos sin/baja actividad)",
      "seccion_6": "GRUPOS SIN ACTIVIDAD NOCTURNA (detalle por grupo)",
      "seccion_7": "OBSERVACIONES (patrones, tendencias)",
      "seccion_8": "RECOMENDACIONES (acciones preventivas)"
    }
  },
  
  "modelos_ia_configuracion": {
    "chatbot": {
      "nodo": "AI Agent WhatsApp",
      "modelo": "gpt-4o-mini",
      "max_tokens": 300,
      "temperature": 0.7,
      "memoria": "Redis Chat Memory (15 d√≠as)",
      "proposito": "Conversaci√≥n natural, modo investigador"
    },
    
    "detector_incidentes": {
      "nodo": "AI Detector Incidentes",
      "modelo": "gpt-4o-mini",
      "max_tokens": 200,
      "temperature": 0.3,
      "memoria": "No usa (an√°lisis independiente)",
      "proposito": "Clasificaci√≥n binaria incidente/no-incidente"
    },
    
    "resumen_diario": {
      "nodo": "AI Generar Resumen",
      "modelo": "gpt-4o",
      "max_tokens": 2000,
      "temperature": 0.5,
      "memoria": "No usa",
      "proposito": "Reportes ejecutivos profesionales"
    },
    
    "resumen_final_investigacion": {
      "nodo": "AI Generar Resumen Final",
      "modelo": "gpt-4o",
      "max_tokens": 1500,
      "temperature": 0.3,
      "memoria": "No usa",
      "proposito": "Reporte final de investigaci√≥n completada"
    }
  },
  
  "prevencion_loops": {
    "filtro_1": {
      "nodo": "Extraer Datos Wasender",
      "condicion": "fromMe === true",
      "accion": "return [] (detener ejecuci√≥n)"
    },
    "filtro_2": {
      "nodo": "Filtrar para Security Monitor",
      "condicion": "remoteJid === '120363424106281199@g.us'",
      "accion": "return [] (no analizar grupo de alertas)"
    },
    "filtro_3": {
      "nodo": "Filtrar Incidentes con Estado",
      "condicion": "investigacion_activa === true",
      "accion": "return [] (evitar alertas duplicadas durante investigaci√≥n)"
    }
  },
  
  "costos_estimados": {
    "diarios": {
      "chatbot": {
        "mensajes": "100-200 mensajes/d√≠a",
        "tokens_promedio": "300 tokens/mensaje",
        "total_tokens": "30,000-60,000 tokens",
        "costo_usd": "$0.015-0.030"
      },
      "detector": {
        "mensajes": "100-200 an√°lisis/d√≠a",
        "tokens_promedio": "200 tokens/an√°lisis",
        "total_tokens": "20,000-40,000 tokens",
        "costo_usd": "$0.010-0.020"
      },
      "resumen_diario": {
        "ejecuciones": "1 por d√≠a",
        "tokens_promedio": "2000 tokens",
        "total_tokens": "2,000 tokens",
        "costo_usd": "$0.030"
      },
      "resumen_final": {
        "ejecuciones": "5-10 por d√≠a (estimado)",
        "tokens_promedio": "1500 tokens",
        "total_tokens": "7,500-15,000 tokens",
        "costo_usd": "$0.113-0.225"
      },
      "total_estimado": "$0.168-0.305 USD/d√≠a = ~$5-9 USD/mes"
    }
  },
  
  "mejoras_implementadas": {
    "version_1_0": [
      "3 flujos b√°sicos (chatbot, detector, resumen)",
      "Detecci√≥n simple de incidentes",
      "Alertas instant√°neas",
      "Resumen diario"
    ],
    "version_2_0": [
      "‚úÖ Sistema de investigaci√≥n activa con preguntas espec√≠ficas",
      "‚úÖ Reportes finales detallados post-investigaci√≥n",
      "‚úÖ Monitoreo proactivo horario de grupos #Reporte",
      "‚úÖ Detecci√≥n de grupos sin actividad",
      "‚úÖ Filtros anti-loop mejorados (fromMe, estado investigaci√≥n)",
      "‚úÖ Filtro de respuestas vac√≠as",
      "‚úÖ Mensajes proactivos d√≠a/noche diferenciados",
      "‚úÖ Timestamp de actividad por canal",
      "‚úÖ Prompt mejorado del detector (incluye incendios expl√≠citamente)"
    ]
  },
  
  "testing_validacion": {
    "test_1_chatbot_normal": {
      "input": "Hola, ¬øc√≥mo est√°s?",
      "expected": {
        "chatbot_responde": false,
        "alerta_enviada": false,
        "razon": "No es incidente ni keyword de RRHH"
      }
    },
    
    "test_2_incidente_incendio": {
      "input": "hay un incendio",
      "expected": {
        "chatbot_responde": true,
        "modo": "investigador",
        "pregunta": "¬øEn qu√© sector exacto se detect√≥? ¬øQu√© magnitud tiene?",
        "alerta_inicial": true,
        "destino_alerta": "120363424106281199@g.us",
        "guardado_redis": true,
        "investigacion_activa": true
      }
    },
    
    "test_3_continuacion_investigacion": {
      "input": "Sector norte, magnitud peque√±a controlada",
      "expected": {
        "chatbot_responde": true,
        "tipo_respuesta": "Siguiente pregunta o confirmaci√≥n",
        "alerta_adicional": false,
        "razon": "Ya hay investigaci√≥n activa"
      }
    },
    
    "test_4_fin_investigacion": {
      "chatbot_dice": "Perfecto, ya tengo la informaci√≥n. Estoy alertando a operaciones ahora mismo.",
      "expected": {
        "reporte_final_generado": true,
        "reporte_enviado": "120363424106281199@g.us",
        "investigacion_cerrada": true
      }
    },
    
    "test_5_resumen_diario": {
      "trigger": "Cron 07:00 AM",
      "expected": {
        "whatsapp_enviado": "120363424106281199@g.us",
        "email_enviado": "operaciones@gard.cl",
        "incluye_metricas": true,
        "incluye_grupos_inactivos": true
      }
    },
    
    "test_6_monitoreo_proactivo": {
      "trigger": "Cron cada hora",
      "condicion": "Grupo #Reporte sin actividad >1h",
      "expected": {
        "mensaje_enviado": true,
        "tipo_mensaje": "d√≠a o noche seg√∫n hora",
        "conversacion_marcada_activa": true
      }
    }
  },
  
  "problemas_solucionados": {
    "problema_1": {
      "descripcion": "Incendios no se detectaban como incidentes",
      "causa": "Prompt no inclu√≠a 'incendios' expl√≠citamente",
      "solucion": "Agregado 'incendios, explosiones, derrames qu√≠micos' como primera categor√≠a URGENTE en el prompt"
    },
    
    "problema_2": {
      "descripcion": "Bot se quedaba sin cuota de OpenAI",
      "causa": "L√≠mite de uso alcanzado",
      "solucion": "Agregar cr√©ditos en https://platform.openai.com/settings/organization/billing"
    },
    
    "problema_3": {
      "descripcion": "Alertas duplicadas durante investigaci√≥n",
      "causa": "Cada mensaje activaba nueva alerta",
      "solucion": "Sistema de estado 'investigacion_activa' en Redis que bloquea nuevas alertas"
    },
    
    "problema_4": {
      "descripcion": "Bot respond√≠a a mensajes normales en grupos",
      "causa": "No hab√≠a filtro de relevancia",
      "solucion": "Prompt modificado para responder vac√≠o si no hay contexto de incidente/RRHH"
    },
    
    "problema_5": {
      "descripcion": "Loop infinito (bot respond√≠a a sus propios mensajes)",
      "causa": "No se filtraba fromMe",
      "solucion": "Filtro en 'Extraer Datos': if (fromMe === true) return []"
    }
  },
  
  "integraciones": {
    "wasender_api": {
      "base_url": "https://wasenderapi.com/api",
      "endpoints_usados": {
        "enviar_mensaje": {
          "method": "POST",
          "path": "/send-message",
          "body": {
            "to": "remoteJid@g.us o n√∫mero@s.whatsapp.net",
            "text": "mensaje"
          }
        },
        "obtener_grupos": {
          "method": "GET",
          "path": "/groups",
          "response": {
            "groups": [
              {
                "id": "groupId",
                "subject": "Nombre del grupo",
                "participants": ["..."]
              }
            ]
          }
        }
      }
    },
    
    "openai_api": {
      "modelos": ["gpt-4o-mini", "gpt-4o"],
      "uso_por_temperatura": {
        "0.3": "An√°lisis determinista (detector, reporte final)",
        "0.5": "Balance creatividad/precisi√≥n (resumen diario)",
        "0.7": "Conversacional creativo (chatbot)"
      }
    },
    
    "redis": {
      "operaciones": ["SET", "GET", "KEYS"],
      "uso_langchain": "Redis Chat Memory autom√°tico",
      "patterns": [
        "guardops:incidente:*",
        "guardops:last_activity:*",
        "guardops:investigacion_activa:*",
        "guardops:conversation_active:*",
        "n8n:memory:*"
      ]
    },
    
    "gmail_api": {
      "operacion": "message.send",
      "formato": "Texto plano con emojis",
      "scopes": ["https://www.googleapis.com/auth/gmail.send"]
    }
  },
  
  "diagramas_flujo": {
    "flujo_principal": "Webhook ‚Üí Extraer ‚Üí [Split] ‚Üí Chatbot + Monitor + Timestamps",
    
    "flujo_chatbot": "AI Agent ‚Üí Filtrar Vac√≠as ‚Üí Switch ‚Üí Respuesta + Detectar Resumen Final",
    
    "flujo_monitor": "Filtrar Security ‚Üí AI Detector ‚Üí Parsear ‚Üí Verificar Estado ‚Üí [Si nuevo] Alertar + Guardar + Marcar Investigaci√≥n",
    
    "flujo_reporte_final": "Detectar Frase Clave ‚Üí Obtener de Redis ‚Üí AI Resumen Final ‚Üí Enviar",
    
    "flujo_resumen_diario": "Cron 07:00 ‚Üí [Get Incidentes + Get Actividad] ‚Üí Procesar ‚Üí AI Resumen ‚Üí [WhatsApp + Email]",
    
    "flujo_proactivo": "Cron Horario ‚Üí Get Grupos ‚Üí Filtrar #Reporte ‚Üí Verificar Actividad ‚Üí [Si >1h] Mensaje D√≠a/Noche ‚Üí Marcar Activa"
  },
  
  "proximos_pasos_recomendados": [
    "1. ‚úÖ Activar el workflow (COMPLETADO)",
    "2. ‚úÖ Resolver cuota OpenAI (agregar cr√©ditos)",
    "3. ‚è≥ Probar con incidentes reales en producci√≥n",
    "4. ‚è≥ Monitorear ejecuciones y ajustar prompts seg√∫n falsos positivos",
    "5. ‚è≥ Implementar GET de valores Redis en resumen diario (actualmente solo keys)",
    "6. ‚è≥ Agregar dashboard de m√©tricas",
    "7. ‚è≥ Implementar base de datos PostgreSQL para historial permanente",
    "8. ‚è≥ Crear panel web de control de incidentes"
  ],
  
  "consideraciones_importantes": [
    "‚ö†Ô∏è El workflow DEBE estar activado para que el webhook funcione",
    "‚ö†Ô∏è Wasender debe apuntar al webhook correcto",
    "‚ö†Ô∏è OpenAI necesita cuota suficiente (monitorear uso diario)",
    "‚ö†Ô∏è Redis debe estar disponible 24/7 (crucial para memoria y estados)",
    "‚ö†Ô∏è Gmail OAuth2 puede expirar, requiere re-autenticaci√≥n peri√≥dica",
    "‚ö†Ô∏è Los grupos #Reporte deben existir y estar accesibles",
    "‚ö†Ô∏è El grupo Operaciones debe permitir mensajes del bot"
  ],
  
  "monitoreo_y_debugging": {
    "ver_ejecuciones": "https://primary-production-8f25.up.railway.app/executions",
    "debug_modo": "Activar desde bot√≥n 'Debug in editor'",
    "logs_importantes": [
      "Console.log en nodos Function muestra estado interno",
      "Input/Output de cada nodo en Executions",
      "Error details en caso de falla"
    ],
    "metricas_clave": [
      "Tasa de detecci√≥n de incidentes",
      "Falsos positivos/negativos",
      "Tiempo de respuesta del chatbot",
      "Completitud de investigaciones",
      "Grupos monitoreados activamente"
    ]
  },
  
  "documentacion_relacionada": {
    "archivo_resumen": "RESUMEN_MONITOR_SEGURIDAD_WHATSAPP.md",
    "workflow_json": "Exportar desde n8n UI",
    "mcp_n8n": "Acceso mediante MCP server para cursos",
    "repositorio": "GardOps/workflow_data/"
  }
}


